{"ast":null,"code":"/* C:\\Work\\07_Si\\02_SimpleDMS_Page\\frontend-react-new\\src\\services\\shop\\CinemaService.ts */\n// CinemaService.ts\n// 영화진흥 위원회의 오픈 API 통신 함수들 정의\n// 전체조회 또는 상세조회\n\nimport axios from \"axios\";\n// 영화진흥 위원회 기본 주소\nlet baseUrl = \"http://www.kobis.or.kr/kobisopenapi/webservice/rest\";\n// /boxoffice/searchDailyBoxOfficeList.json\n\n// TODO: 내가 받은 발급 받은 api key 변수\nlet apiKey = \"1c444db83359ba37a78cb67fab7c273f\";\n\n// 전체 조회\n// 요청필드(조건)\n// key : 위의 인증키 넣기(필수)\n// targetDt : 조회하고자 하는 날짜를 yyyymmdd 형식(필수)\n// repNationCd : “K: : 한국영화 “F” : 외국영화 (\"\" : 전체)\n// itemPerPage : 결과 ROW 의 개수를 지정\n// 변수 사용 : 쿼리스트링 방식 (?변수명=값&변수명2=값2...)\nconst getAll = (targetDt, repNationCd, itemPerPage) => {\n  // 주소 조합 : 기본주소 + 추가주소 + 변수명\n  let url = `${baseUrl}/boxoffice/searchDailyBoxOfficeList.json?key=${apiKey}&targetDt=${targetDt}&repNationCd=${repNationCd}&itemPerPage=${itemPerPage}`;\n  console.log(\"url\", url);\n  return axios.get(url);\n};\n\n// 영화 상세조회(1건조회)\n// ${baseUrl}/movie/searchMovieInfo.json\n// 요청필드(조건) :\n// key : 인증키(위에 있음) : 필수\n// movieCd (영화코드)\nconst get = movieCd => {\n  // 기본주소 + 추가주소 + 변수명(쿼리스트링)\n  let url = `${baseUrl}/movie/searchMovieInfo.json?key=${apiKey}&movieCd=${movieCd}`;\n  console.log(\"상세조회 url\", url);\n  return axios.get(url);\n};\nconst CinemaService = {\n  getAll,\n  get\n};\nexport default CinemaService;","map":{"version":3,"names":["axios","baseUrl","apiKey","getAll","targetDt","repNationCd","itemPerPage","url","console","log","get","movieCd","CinemaService"],"sources":["C:/Work/07_Si/02_SimpleDMS_Page/frontend-react-new/src/services/shop/CinemaService.ts"],"sourcesContent":["/* C:\\Work\\07_Si\\02_SimpleDMS_Page\\frontend-react-new\\src\\services\\shop\\CinemaService.ts */\r\n// CinemaService.ts\r\n// 영화진흥 위원회의 오픈 API 통신 함수들 정의\r\n// 전체조회 또는 상세조회\r\n\r\nimport axios from \"axios\";\r\nimport ICinema from \"../../types/shop/ICinema\";\r\n\r\n// 영화진흥 위원회 기본 주소\r\nlet baseUrl = \"http://www.kobis.or.kr/kobisopenapi/webservice/rest\";\r\n// /boxoffice/searchDailyBoxOfficeList.json\r\n\r\n// TODO: 내가 받은 발급 받은 api key 변수\r\nlet apiKey = \"1c444db83359ba37a78cb67fab7c273f\";\r\n\r\n// 전체 조회\r\n// 요청필드(조건)\r\n// key : 위의 인증키 넣기(필수)\r\n// targetDt : 조회하고자 하는 날짜를 yyyymmdd 형식(필수)\r\n// repNationCd : “K: : 한국영화 “F” : 외국영화 (\"\" : 전체)\r\n// itemPerPage : 결과 ROW 의 개수를 지정\r\n// 변수 사용 : 쿼리스트링 방식 (?변수명=값&변수명2=값2...)\r\nconst getAll = (targetDt: string, repNationCd: string, itemPerPage: number) => {\r\n  // 주소 조합 : 기본주소 + 추가주소 + 변수명\r\n  let url = `${baseUrl}/boxoffice/searchDailyBoxOfficeList.json?key=${apiKey}&targetDt=${targetDt}&repNationCd=${repNationCd}&itemPerPage=${itemPerPage}`;\r\n  console.log(\"url\", url);\r\n\r\n  return axios.get<Array<ICinema>>(url);\r\n};\r\n\r\n// 영화 상세조회(1건조회)\r\n// ${baseUrl}/movie/searchMovieInfo.json\r\n// 요청필드(조건) :\r\n// key : 인증키(위에 있음) : 필수\r\n// movieCd (영화코드)\r\nconst get = (movieCd: string) => {\r\n  // 기본주소 + 추가주소 + 변수명(쿼리스트링)\r\n  let url = `${baseUrl}/movie/searchMovieInfo.json?key=${apiKey}&movieCd=${movieCd}`;\r\n  console.log(\"상세조회 url\", url);\r\n\r\n  return axios.get<ICinema>(url);\r\n};\r\n\r\nconst CinemaService = {\r\n  getAll,\r\n  get,\r\n};\r\nexport default CinemaService;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAGzB;AACA,IAAIC,OAAO,GAAG,qDAAqD;AACnE;;AAEA;AACA,IAAIC,MAAM,GAAG,kCAAkC;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAGA,CAACC,QAAgB,EAAEC,WAAmB,EAAEC,WAAmB,KAAK;EAC7E;EACA,IAAIC,GAAG,GAAI,GAAEN,OAAQ,gDAA+CC,MAAO,aAAYE,QAAS,gBAAeC,WAAY,gBAAeC,WAAY,EAAC;EACvJE,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEF,GAAG,CAAC;EAEvB,OAAOP,KAAK,CAACU,GAAG,CAAiBH,GAAG,CAAC;AACvC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMG,GAAG,GAAIC,OAAe,IAAK;EAC/B;EACA,IAAIJ,GAAG,GAAI,GAAEN,OAAQ,mCAAkCC,MAAO,YAAWS,OAAQ,EAAC;EAClFH,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,GAAG,CAAC;EAE5B,OAAOP,KAAK,CAACU,GAAG,CAAUH,GAAG,CAAC;AAChC,CAAC;AAED,MAAMK,aAAa,GAAG;EACpBT,MAAM;EACNO;AACF,CAAC;AACD,eAAeE,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}