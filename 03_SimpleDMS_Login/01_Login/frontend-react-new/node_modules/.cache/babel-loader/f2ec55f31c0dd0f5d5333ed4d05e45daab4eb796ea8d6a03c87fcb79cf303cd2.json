{"ast":null,"code":"/* C:\\Work\\07_Si\\02_SimpleDMS_Page\\frontend-react-new\\src\\services\\advanced\\IFileDbService.ts */\n// axios 공통 CRUD 함수 : 벡엔드 연동\n// TODO: import\n\nimport http from \"../../utils/http-common\";\n\n// 전체 조회 + like 검색(paging 기능 : page(현재페이지), size(1페이지당개수))\n// TODO: 리턴 제네릭 삭제 <IFileDb>\n// TODO: Promise<any> : 함수의 리턴 타입\nconst getFiles = (fileTitle, page, size) => {\n  return http.get(`/advanced/fileDb?fileTitle=${fileTitle}&page=${page}&size=${size}`);\n};\n\n// 상세 조회(uuid)\nconst getFileDb = uuid => {\n  return http.get(`/advanced/fileDb/get/${uuid}`);\n};\n\n// 저장함수 : 이전 학습까지는 객체만 저장해왔다면 이번에는 첨부파일(이미지)를 FormData 객체로 받아서 백엔드로 전송\n// updateFileDb : 제목 + 타이틀(내용) 속성 가진 객체\n// TODO: fileDb : 이미지(*첨부파일)\n// FormData 객체를 이용해서 백엔드로 전송\nconst upload = (updateFileDb, fileDb) => {\n  // FormData 객체 생성 : Map 자료구조와 유사(키, 값)\n  let formData = new FormData();\n  formData.append(\"fileTitle\", updateFileDb.fileTitle); // 제목\n  formData.append(\"fileContent\", updateFileDb.fileContent); // 타이틀(내용)\n  formData.append(\"fileDb\", fileDb); // 첨부파일\n\n  // TODO: 백엔드로 보내서 받을 떄 headers(문서종류), body(문서내용)을/를 보내야 한다.\n  return http.post(\"/advanced/fileDb/upload\", formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n};\n\n// 수정함수 : 저장 함수와 거의 동일하며, post 방시이 아닌 put 방식으로만 수정하면 됨.\n// 1) FormData 객체사용\n// 2)  headers: {\"Content-Type\": \"multipart/form-data\"}\nconst updateFileDb = (uploadFileDb, fileDb) => {\n  console.log(\"update() parameter ; \", uploadFileDb);\n  let formData = new FormData();\n  formData.append(\"fileTitle\", uploadFileDb.fileTitle);\n  formData.append(\"fileContent\", uploadFileDb.fileContent);\n  formData.append(\"fileDb\", fileDb);\n  return http.put(`/advanced/fileDb/${uploadFileDb.uuid}`, formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n};\n\n// 삭제함수(uuid)\nconst remove = uuid => {\n  return http.delete(`/advanced/fileDb/deletion/${uuid}`);\n};\nconst FileDbService = {\n  getFiles,\n  // 전체조회\n  getFileDb,\n  // 상세조회\n  upload,\n  // insert(저장)\n  updateFileDb,\n  // 수정\n  remove // 삭제\n};\n\nexport default FileDbService;","map":{"version":3,"names":["http","getFiles","fileTitle","page","size","get","getFileDb","uuid","upload","updateFileDb","fileDb","formData","FormData","append","fileContent","post","headers","uploadFileDb","console","log","put","remove","delete","FileDbService"],"sources":["C:/Work/07_Si/02_SimpleDMS_Page/frontend-react-new/src/services/advanced/IFileDbService.ts"],"sourcesContent":["/* C:\\Work\\07_Si\\02_SimpleDMS_Page\\frontend-react-new\\src\\services\\advanced\\IFileDbService.ts */\r\n// axios 공통 CRUD 함수 : 벡엔드 연동\r\n// TODO: import\r\nimport IFileDb from \"../../types/advanced/IFileDb\";\r\nimport http from \"../../utils/http-common\";\r\n\r\n// 전체 조회 + like 검색(paging 기능 : page(현재페이지), size(1페이지당개수))\r\n// TODO: 리턴 제네릭 삭제 <IFileDb>\r\n// TODO: Promise<any> : 함수의 리턴 타입\r\nconst getFiles = (\r\n  fileTitle: string,\r\n  page: number,\r\n  size: number\r\n): Promise<any> => {\r\n  return http.get(\r\n    `/advanced/fileDb?fileTitle=${fileTitle}&page=${page}&size=${size}`\r\n  );\r\n};\r\n\r\n// 상세 조회(uuid)\r\nconst getFileDb = (uuid: any): Promise<any> => {\r\n  return http.get(`/advanced/fileDb/get/${uuid}`);\r\n};\r\n\r\n// 저장함수 : 이전 학습까지는 객체만 저장해왔다면 이번에는 첨부파일(이미지)를 FormData 객체로 받아서 백엔드로 전송\r\n// updateFileDb : 제목 + 타이틀(내용) 속성 가진 객체\r\n// TODO: fileDb : 이미지(*첨부파일)\r\n// FormData 객체를 이용해서 백엔드로 전송\r\nconst upload = (updateFileDb: IFileDb, fileDb: any): Promise<any> => {\r\n  // FormData 객체 생성 : Map 자료구조와 유사(키, 값)\r\n  let formData = new FormData();\r\n  formData.append(\"fileTitle\", updateFileDb.fileTitle); // 제목\r\n  formData.append(\"fileContent\", updateFileDb.fileContent); // 타이틀(내용)\r\n  formData.append(\"fileDb\", fileDb); // 첨부파일\r\n\r\n  // TODO: 백엔드로 보내서 받을 떄 headers(문서종류), body(문서내용)을/를 보내야 한다.\r\n  return http.post(\"/advanced/fileDb/upload\", formData, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n  });\r\n};\r\n\r\n// 수정함수 : 저장 함수와 거의 동일하며, post 방시이 아닌 put 방식으로만 수정하면 됨.\r\n// 1) FormData 객체사용\r\n// 2)  headers: {\"Content-Type\": \"multipart/form-data\"}\r\nconst updateFileDb = (uploadFileDb: IFileDb, fileDb: any): Promise<any> => {\r\n  console.log(\"update() parameter ; \", uploadFileDb);\r\n\r\n  let formData = new FormData();\r\n\r\n  formData.append(\"fileTitle\", uploadFileDb.fileTitle);\r\n  formData.append(\"fileContent\", uploadFileDb.fileContent);\r\n  formData.append(\"fileDb\", fileDb);\r\n\r\n  return http.put(`/advanced/fileDb/${uploadFileDb.uuid}`, formData, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n  });\r\n};\r\n\r\n// 삭제함수(uuid)\r\nconst remove = (uuid: any) : Promise<any> => {\r\n  return http.delete<any>(`/advanced/fileDb/deletion/${uuid}`);\r\n};\r\n\r\nconst FileDbService = {\r\n  getFiles,     // 전체조회\r\n  getFileDb,    // 상세조회\r\n  upload,       // insert(저장)\r\n  updateFileDb, // 수정\r\n  remove,       // 삭제\r\n};\r\n\r\nexport default FileDbService;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAOA,IAAI,MAAM,yBAAyB;;AAE1C;AACA;AACA;AACA,MAAMC,QAAQ,GAAGA,CACfC,SAAiB,EACjBC,IAAY,EACZC,IAAY,KACK;EACjB,OAAOJ,IAAI,CAACK,GAAG,CACZ,8BAA6BH,SAAU,SAAQC,IAAK,SAAQC,IAAK,EACpE,CAAC;AACH,CAAC;;AAED;AACA,MAAME,SAAS,GAAIC,IAAS,IAAmB;EAC7C,OAAOP,IAAI,CAACK,GAAG,CAAE,wBAAuBE,IAAK,EAAC,CAAC;AACjD,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAGA,CAACC,YAAqB,EAAEC,MAAW,KAAmB;EACnE;EACA,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC7BD,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEJ,YAAY,CAACP,SAAS,CAAC,CAAC,CAAC;EACtDS,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEJ,YAAY,CAACK,WAAW,CAAC,CAAC,CAAC;EAC1DH,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEH,MAAM,CAAC,CAAC,CAAC;;EAEnC;EACA,OAAOV,IAAI,CAACe,IAAI,CAAC,yBAAyB,EAAEJ,QAAQ,EAAE;IACpDK,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA,MAAMP,YAAY,GAAGA,CAACQ,YAAqB,EAAEP,MAAW,KAAmB;EACzEQ,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,YAAY,CAAC;EAElD,IAAIN,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAE7BD,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEI,YAAY,CAACf,SAAS,CAAC;EACpDS,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEI,YAAY,CAACH,WAAW,CAAC;EACxDH,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEH,MAAM,CAAC;EAEjC,OAAOV,IAAI,CAACoB,GAAG,CAAE,oBAAmBH,YAAY,CAACV,IAAK,EAAC,EAAEI,QAAQ,EAAE;IACjEK,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,MAAMK,MAAM,GAAId,IAAS,IAAoB;EAC3C,OAAOP,IAAI,CAACsB,MAAM,CAAO,6BAA4Bf,IAAK,EAAC,CAAC;AAC9D,CAAC;AAED,MAAMgB,aAAa,GAAG;EACpBtB,QAAQ;EAAM;EACdK,SAAS;EAAK;EACdE,MAAM;EAAQ;EACdC,YAAY;EAAE;EACdY,MAAM,CAAQ;AAChB,CAAC;;AAED,eAAeE,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}