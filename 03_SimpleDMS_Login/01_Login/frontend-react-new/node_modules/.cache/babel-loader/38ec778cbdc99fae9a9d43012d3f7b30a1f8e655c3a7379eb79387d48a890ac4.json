{"ast":null,"code":"// ThreadBoardService.ts : axios 공통 CRUD 함수 : 벡엔드 연동\n\nimport http from \"../../utils/http-common\";\n\n// 전체 조회 + like 검색(paging 기능 : page(현재페이지), size(1페이지당개수))\nconst getAll = (subject, page, size) => {\n  return http.get(`/normal/thread-board?subject=${subject}&page=${page}&size=${size}`);\n};\n\n// 상세 조회\nconst get = tid => {\n  return http.get(`/normal/thread-board/${tid}`);\n};\n\n// TODO: 저장함수1 : 게시물 생성(부모글)\nconst createBoard = data => {\n  return http.post(\"/normal/thread-board\", data);\n};\n\n// TODO: 저장함수2 : 답변글 생성(자식글)\nconst create = data => {\n  return http.post(\"/normal/thread\", data);\n};\n\n// 수정함수\nconst update = (tid, data) => {\n  return http.put(`/normal/thread-board/${tid}`, data);\n};\n\n// TODO: 삭제함수1 : 게시물(부모글) + 답변글(자식글) 모두 삭제\n// TODO:            그룹번호 : 부모글과 자식글은 모두 그룹번호가 같음\nconst removeBoard = tgroup => {\n  return http.delete(`/normal/thread-board/deletion/${tgroup}`);\n};\n\n// TODO: 삭제함수2 : 답변글만 삭제\nconst remove = tid => {\n  return http.delete(`/normal/thread/deletion/${tid}`);\n};\nconst ThreadBoardService = {\n  getAll,\n  get,\n  createBoard,\n  create,\n  update,\n  removeBoard,\n  remove\n};\nexport default ThreadBoardService;","map":{"version":3,"names":["http","getAll","subject","page","size","get","tid","createBoard","data","post","create","update","put","removeBoard","tgroup","delete","remove","ThreadBoardService"],"sources":["C:/Work/07_Si/02_SimpleDMS_Page/frontend-react-new/src/services/normal/ThreadBoardService.ts"],"sourcesContent":["// ThreadBoardService.ts : axios 공통 CRUD 함수 : 벡엔드 연동\r\n\r\nimport IThreadBoard from \"../../types/normal/IThreadBoard\";\r\nimport http from \"../../utils/http-common\";\r\n\r\n// 전체 조회 + like 검색(paging 기능 : page(현재페이지), size(1페이지당개수))\r\nconst getAll = (subject: string, page: number, size: number) => {\r\n  return http.get<Array<IThreadBoard>>(\r\n    `/normal/thread-board?subject=${subject}&page=${page}&size=${size}`\r\n  );\r\n};\r\n\r\n// 상세 조회\r\nconst get = (tid: any) => {\r\n  return http.get<IThreadBoard>(`/normal/thread-board/${tid}`);\r\n};\r\n\r\n// TODO: 저장함수1 : 게시물 생성(부모글)\r\nconst createBoard = (data: IThreadBoard) => {\r\n  return http.post<IThreadBoard>(\"/normal/thread-board\", data);\r\n};\r\n\r\n// TODO: 저장함수2 : 답변글 생성(자식글)\r\nconst create = (data: IThreadBoard) => {\r\n  return http.post<IThreadBoard>(\"/normal/thread\", data);\r\n};\r\n\r\n// 수정함수\r\nconst update = (tid: any, data: IThreadBoard) => {\r\n  return http.put<any>(`/normal/thread-board/${tid}`, data);\r\n};\r\n\r\n// TODO: 삭제함수1 : 게시물(부모글) + 답변글(자식글) 모두 삭제\r\n// TODO:            그룹번호 : 부모글과 자식글은 모두 그룹번호가 같음\r\nconst removeBoard = (tgroup: any) => {\r\n  return http.delete<any>(`/normal/thread-board/deletion/${tgroup}`);\r\n};\r\n\r\n// TODO: 삭제함수2 : 답변글만 삭제\r\nconst remove = (tid: any) => {\r\n  return http.delete<any>(`/normal/thread/deletion/${tid}`);\r\n};\r\n\r\nconst ThreadBoardService = {\r\n  getAll,\r\n  get,\r\n  createBoard,\r\n  create,\r\n  update,\r\n  removeBoard,\r\n  remove,\r\n};\r\n\r\nexport default ThreadBoardService;\r\n"],"mappings":"AAAA;;AAGA,OAAOA,IAAI,MAAM,yBAAyB;;AAE1C;AACA,MAAMC,MAAM,GAAGA,CAACC,OAAe,EAAEC,IAAY,EAAEC,IAAY,KAAK;EAC9D,OAAOJ,IAAI,CAACK,GAAG,CACZ,gCAA+BH,OAAQ,SAAQC,IAAK,SAAQC,IAAK,EACpE,CAAC;AACH,CAAC;;AAED;AACA,MAAMC,GAAG,GAAIC,GAAQ,IAAK;EACxB,OAAON,IAAI,CAACK,GAAG,CAAgB,wBAAuBC,GAAI,EAAC,CAAC;AAC9D,CAAC;;AAED;AACA,MAAMC,WAAW,GAAIC,IAAkB,IAAK;EAC1C,OAAOR,IAAI,CAACS,IAAI,CAAe,sBAAsB,EAAED,IAAI,CAAC;AAC9D,CAAC;;AAED;AACA,MAAME,MAAM,GAAIF,IAAkB,IAAK;EACrC,OAAOR,IAAI,CAACS,IAAI,CAAe,gBAAgB,EAAED,IAAI,CAAC;AACxD,CAAC;;AAED;AACA,MAAMG,MAAM,GAAGA,CAACL,GAAQ,EAAEE,IAAkB,KAAK;EAC/C,OAAOR,IAAI,CAACY,GAAG,CAAO,wBAAuBN,GAAI,EAAC,EAAEE,IAAI,CAAC;AAC3D,CAAC;;AAED;AACA;AACA,MAAMK,WAAW,GAAIC,MAAW,IAAK;EACnC,OAAOd,IAAI,CAACe,MAAM,CAAO,iCAAgCD,MAAO,EAAC,CAAC;AACpE,CAAC;;AAED;AACA,MAAME,MAAM,GAAIV,GAAQ,IAAK;EAC3B,OAAON,IAAI,CAACe,MAAM,CAAO,2BAA0BT,GAAI,EAAC,CAAC;AAC3D,CAAC;AAED,MAAMW,kBAAkB,GAAG;EACzBhB,MAAM;EACNI,GAAG;EACHE,WAAW;EACXG,MAAM;EACNC,MAAM;EACNE,WAAW;EACXG;AACF,CAAC;AAED,eAAeC,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}