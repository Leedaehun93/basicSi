{"ast":null,"code":"/*!\n * My DropDown Menu v1.0\n * Copyright 2023 , Kang Tae Gyung\n * Licensed under MIT\n */\n// 화면에서 메뉴 보기 함수\n// sidebar-wrapper : 내가 디자인한 드룹다운 메뉴(데스크탑 화면에서 사용)\n// dropdown-menu   : 부트스트랩 드롭다운 메뉴(모바일 화면에서 사용)\n// 1) 부트스트랩 축소메뉴 사용 - visibility: visible 고정, display : block|none 사용, dropdown-menu 추가, sidebar-wrapper 제거\n// 2) 내가 디자인한 메뉴 사용 - visibility: visible|hidden 속성 사용,  display : \"\" 고정, dropdown-menu 제거, sidebar-wrapper 추가\n\n/* eslint-disable */\nexport default function initMain() {\n  function showMenu(element, isVisible, isDisplay, addClassName, removeClassName) {\n    //   sidebar-nav == menu.children[1].children[0]\n    element.children[1].children[0].style.visibility = isVisible;\n    element.children[1].children[0].style.display = isDisplay;\n    element.children[1].children[0].classList.add(addClassName);\n    element.children[1].children[0].classList.remove(removeClassName);\n  }\n\n  // 메뉴(nav) 배경색 변경 함수\n  function bgColorReplace(before, after) {\n    const navWrapper = document.querySelector(\".nav-wrapper\");\n    // 마우스가 메뉴에 올라오면 nav 바탕색을 하얀색으로 변경\n    if (navWrapper.classList.contains(before)) {\n      navWrapper.classList.replace(before, after);\n    }\n  }\n\n  // 1) 드롭다운 메뉴 : 해상도에 따라 변경됨\n  // 유사 배열을 배열로 변경 : map 함수 사용을 위해 변경함\n  const menuToggle = [].slice.call(document.body.querySelectorAll(\".menu-toggle\"));\n\n  // 반복적으로 이벤트 함수 추가\n  menuToggle.map(menu => {\n    menu.addEventListener(\"mouseover\", event => {\n      event.preventDefault();\n      // 브라우저 크기 구하기\n      const innerWidth = window.innerWidth;\n\n      // 마우스가 메뉴에 올라오면 nav 바탕색을 하얀색으로 변경 함수 호출\n      bgColorReplace(\"bg-light\", \"bg-white\");\n\n      // pc 화면에서는 myMenu 사용하고\n      // bootstrap 은 992이상은 pc 화면을 의미하고, 이하는 테블릿, 핸드폰 등을 의미\n      // 992 이하부터 단축 메뉴 버튼이 나옴\n      if (innerWidth >= 992) {\n        // sidebar-wrapper == menu.children[1]\n        // 드롭다운 메뉴 배경 추가(회색)\n        menu.children[1].classList.add(\"active\");\n        menu.children[1].classList.add(\"sidebar-wrapper\");\n\n        //   sidebar-nav == menu.children[1].children[0]\n        // 마우스가 메뉴 위로 올라가면 내가 디자인한 드롭다운 메뉴 화면에 표시\n        showMenu(menu, \"visible\", \"\", \"sidebar-nav\", \"dropdown-menu\");\n      } else {\n        // sidebar-wrapper == menu.children[1]\n        menu.children[1].classList.remove(\"sidebar-wrapper\");\n\n        //   sidebar-nav == menu.children[1].children[0]\n        // 모바일 화면에서는 부트스트랩 드롭다운 메뉴룰 사용함\n        // 마우스가 메뉴 위로 올라가면 부트스트랩 드롭다운 메뉴 화면에 표시\n        showMenu(menu, \"visible\", \"block\", \"dropdown-menu\", \"sidebar-nav\");\n      }\n    });\n\n    // sidebar-wrapper == menu.children[1]\n    menu.addEventListener(\"mouseout\", event => {\n      event.preventDefault();\n      // 브라우저 크기 구하기\n      const innerWidth = window.innerWidth;\n\n      // 마우스가 메뉴에 올라오면 nav 바탕색을 라이트로 변경 함수 호출\n      bgColorReplace(\"bg-white\", \"bg-light\");\n\n      // pc 화면에서는 myMenu 사용하고\n      if (innerWidth >= 992) {\n        // sidebar-wrapper == menu.children[1]\n        // 드롭다운 메뉴 배경 없애기(회색)\n        menu.children[1].classList.remove(\"active\");\n        menu.children[1].classList.add(\"sidebar-wrapper\");\n\n        // 마우스가 메뉴에서 나가면 내가 디자인한 드롭다운 메뉴 화면에서 감춤\n        showMenu(menu, \"hidden\", \"\", \"sidebar-nav\", \"dropdown-menu\");\n      } else {\n        // sidebar-wrapper == menu.children[1]\n        // 내가 디자인한 드롭다운 메뉴 없애기\n        menu.children[1].classList.remove(\"sidebar-wrapper\");\n\n        // 모바일 화면에서는 부트스트랩 드롭다운 메뉴룰 사용함\n        // 마우스가 메뉴에서 나가면 부트스트랩 드롭다운 메뉴 화면에서 감춤\n        showMenu(menu, \"visible\", \"none\", \"dropdown-menu\", \"sidebar-nav\");\n      }\n    });\n  });\n}","map":{"version":3,"names":["initMain","showMenu","element","isVisible","isDisplay","addClassName","removeClassName","children","style","visibility","display","classList","add","remove","bgColorReplace","before","after","navWrapper","document","querySelector","contains","replace","menuToggle","slice","call","body","querySelectorAll","map","menu","addEventListener","event","preventDefault","innerWidth","window"],"sources":["C:/Work/07_Si/02_SimpleDMS_Page/frontend-react-new/src/assets/js/scripts.js"],"sourcesContent":["/*!\n * My DropDown Menu v1.0\n * Copyright 2023 , Kang Tae Gyung\n * Licensed under MIT\n */\n// 화면에서 메뉴 보기 함수\n// sidebar-wrapper : 내가 디자인한 드룹다운 메뉴(데스크탑 화면에서 사용)\n// dropdown-menu   : 부트스트랩 드롭다운 메뉴(모바일 화면에서 사용)\n// 1) 부트스트랩 축소메뉴 사용 - visibility: visible 고정, display : block|none 사용, dropdown-menu 추가, sidebar-wrapper 제거\n// 2) 내가 디자인한 메뉴 사용 - visibility: visible|hidden 속성 사용,  display : \"\" 고정, dropdown-menu 제거, sidebar-wrapper 추가\n\n/* eslint-disable */\nexport default function initMain() {\n  function showMenu(\n    element,\n    isVisible,\n    isDisplay,\n    addClassName,\n    removeClassName\n  ) {\n    //   sidebar-nav == menu.children[1].children[0]\n    element.children[1].children[0].style.visibility = isVisible;\n    element.children[1].children[0].style.display = isDisplay;\n    element.children[1].children[0].classList.add(addClassName);\n    element.children[1].children[0].classList.remove(removeClassName);\n  }\n\n  // 메뉴(nav) 배경색 변경 함수\n  function bgColorReplace(before, after) {\n    const navWrapper = document.querySelector(\".nav-wrapper\");\n    // 마우스가 메뉴에 올라오면 nav 바탕색을 하얀색으로 변경\n    if (navWrapper.classList.contains(before)) {\n      navWrapper.classList.replace(before, after);\n    }\n  }\n\n  // 1) 드롭다운 메뉴 : 해상도에 따라 변경됨\n  // 유사 배열을 배열로 변경 : map 함수 사용을 위해 변경함\n  const menuToggle = [].slice.call(\n    document.body.querySelectorAll(\".menu-toggle\")\n  );\n\n  // 반복적으로 이벤트 함수 추가\n  menuToggle.map((menu) => {\n    menu.addEventListener(\"mouseover\", (event) => {\n      event.preventDefault();\n      // 브라우저 크기 구하기\n      const innerWidth = window.innerWidth;\n\n      // 마우스가 메뉴에 올라오면 nav 바탕색을 하얀색으로 변경 함수 호출\n      bgColorReplace(\"bg-light\", \"bg-white\");\n\n      // pc 화면에서는 myMenu 사용하고\n      // bootstrap 은 992이상은 pc 화면을 의미하고, 이하는 테블릿, 핸드폰 등을 의미\n      // 992 이하부터 단축 메뉴 버튼이 나옴\n      if (innerWidth >= 992) {\n        // sidebar-wrapper == menu.children[1]\n        // 드롭다운 메뉴 배경 추가(회색)\n        menu.children[1].classList.add(\"active\");\n        menu.children[1].classList.add(\"sidebar-wrapper\");\n\n        //   sidebar-nav == menu.children[1].children[0]\n        // 마우스가 메뉴 위로 올라가면 내가 디자인한 드롭다운 메뉴 화면에 표시\n        showMenu(menu, \"visible\", \"\", \"sidebar-nav\", \"dropdown-menu\");\n      } else {\n        // sidebar-wrapper == menu.children[1]\n        menu.children[1].classList.remove(\"sidebar-wrapper\");\n\n        //   sidebar-nav == menu.children[1].children[0]\n        // 모바일 화면에서는 부트스트랩 드롭다운 메뉴룰 사용함\n        // 마우스가 메뉴 위로 올라가면 부트스트랩 드롭다운 메뉴 화면에 표시\n        showMenu(menu, \"visible\", \"block\", \"dropdown-menu\", \"sidebar-nav\");\n      }\n    });\n\n    // sidebar-wrapper == menu.children[1]\n    menu.addEventListener(\"mouseout\", (event) => {\n      event.preventDefault();\n      // 브라우저 크기 구하기\n      const innerWidth = window.innerWidth;\n\n      // 마우스가 메뉴에 올라오면 nav 바탕색을 라이트로 변경 함수 호출\n      bgColorReplace(\"bg-white\", \"bg-light\");\n\n      // pc 화면에서는 myMenu 사용하고\n      if (innerWidth >= 992) {\n        // sidebar-wrapper == menu.children[1]\n        // 드롭다운 메뉴 배경 없애기(회색)\n        menu.children[1].classList.remove(\"active\");\n        menu.children[1].classList.add(\"sidebar-wrapper\");\n\n        // 마우스가 메뉴에서 나가면 내가 디자인한 드롭다운 메뉴 화면에서 감춤\n        showMenu(menu, \"hidden\", \"\", \"sidebar-nav\", \"dropdown-menu\");\n      } else {\n        // sidebar-wrapper == menu.children[1]\n        // 내가 디자인한 드롭다운 메뉴 없애기\n        menu.children[1].classList.remove(\"sidebar-wrapper\");\n\n        // 모바일 화면에서는 부트스트랩 드롭다운 메뉴룰 사용함\n        // 마우스가 메뉴에서 나가면 부트스트랩 드롭다운 메뉴 화면에서 감춤\n        showMenu(menu, \"visible\", \"none\", \"dropdown-menu\", \"sidebar-nav\");\n      }\n    });\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}