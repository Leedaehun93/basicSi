{"ast":null,"code":"/* C:\\Work\\07_Si\\03_SimpleDMS_Login\\01_Login\\frontend-react-new\\src\\services\\auth\\authService.ts */\n// authService.ts : axios 백엔드 통신 공통 함수(register, login, logout)\n// http 헤더에 웹토큰 넣어 백엔드로 조회요청 해야 함(인증 성공이 뜸)\n\n// TODO: import\n\nimport http from \"../../utils/http-common\";\n\n// 회원가입(register, signup) 함수(insert)\nconst register = user => {\n  return http.post(\"/auth/signup\", user);\n};\n\n// 로그아웃 함수 : 로컬스토리지에서 값 제거\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\n// TODO : 로그인 함수 : (login, signin) : 조회(get) why? 보안 떄문에\n// get -> 웹브라우저 주소창에 요청 변수 또는 주소값이 나타남\n// TODO : post -> 웹브라우저 주소창에 정보가 나타나지 않음(보안)\nconst login = user => {\n  return http.post(\"/auth/signin\", user) // 백엔드 함수 실행\n  .then(response => {\n    // 성공 : 백엔드에서 웹토큰 발행해서 전송해줌\n    // 백엔드 : 웹토큰 + 유저이름 + 유저권한 등\n    if (response.data.accessToken) {\n      // 로컬 스토리지에(객체(response.data) -> 문자열(JSON.stringify) 변환) 저장\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n    }\n    return response.data; // 백엔드 정보\n  });\n};\n\nconst AuthService = {\n  register,\n  login,\n  logout\n};\nexport default AuthService;","map":{"version":3,"names":["http","register","user","post","logout","localStorage","removeItem","login","then","response","data","accessToken","setItem","JSON","stringify","AuthService"],"sources":["C:/Work/07_Si/03_SimpleDMS_Login/01_Login/frontend-react-new/src/services/auth/authService.ts"],"sourcesContent":["/* C:\\Work\\07_Si\\03_SimpleDMS_Login\\01_Login\\frontend-react-new\\src\\services\\auth\\authService.ts */\r\n// authService.ts : axios 백엔드 통신 공통 함수(register, login, logout)\r\n// http 헤더에 웹토큰 넣어 백엔드로 조회요청 해야 함(인증 성공이 뜸)\r\n\r\n// TODO: import\r\nimport IUser from \"../../types/auth/IUser\";\r\nimport http from \"../../utils/http-common\";\r\n\r\n// 회원가입(register, signup) 함수(insert)\r\nconst register = (user: IUser) => {\r\n  return http.post(\"/auth/signup\", user);\r\n};\r\n\r\n// 로그아웃 함수 : 로컬스토리지에서 값 제거\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\n// TODO : 로그인 함수 : (login, signin) : 조회(get) why? 보안 떄문에\r\n// get -> 웹브라우저 주소창에 요청 변수 또는 주소값이 나타남\r\n// TODO : post -> 웹브라우저 주소창에 정보가 나타나지 않음(보안)\r\nconst login = (user: IUser) => {\r\n  return http\r\n    .post(\"/auth/signin\", user) // 백엔드 함수 실행\r\n    .then((response: any) => {\r\n      // 성공 : 백엔드에서 웹토큰 발행해서 전송해줌\r\n      // 백엔드 : 웹토큰 + 유저이름 + 유저권한 등\r\n      if (response.data.accessToken) {\r\n        // 로컬 스토리지에(객체(response.data) -> 문자열(JSON.stringify) 변환) 저장\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n      return response.data; // 백엔드 정보\r\n    });\r\n};\r\n\r\nconst AuthService = {\r\n    register,\r\n    login,\r\n    logout\r\n }\r\n export default AuthService;"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA,OAAOA,IAAI,MAAM,yBAAyB;;AAE1C;AACA,MAAMC,QAAQ,GAAIC,IAAW,IAAK;EAChC,OAAOF,IAAI,CAACG,IAAI,CAAC,cAAc,EAAED,IAAI,CAAC;AACxC,CAAC;;AAED;AACA,MAAME,MAAM,GAAGA,CAAA,KAAM;EACnBC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;AACjC,CAAC;;AAED;AACA;AACA;AACA,MAAMC,KAAK,GAAIL,IAAW,IAAK;EAC7B,OAAOF,IAAI,CACRG,IAAI,CAAC,cAAc,EAAED,IAAI,CAAC,CAAC;EAAA,CAC3BM,IAAI,CAAEC,QAAa,IAAK;IACvB;IACA;IACA,IAAIA,QAAQ,CAACC,IAAI,CAACC,WAAW,EAAE;MAC7B;MACAN,YAAY,CAACO,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC7D;IACA,OAAOD,QAAQ,CAACC,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC;AACN,CAAC;;AAED,MAAMK,WAAW,GAAG;EAChBd,QAAQ;EACRM,KAAK;EACLH;AACH,CAAC;AACD,eAAeW,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}