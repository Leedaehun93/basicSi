{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\07_Si\\\\02_SimpleDMS_Page\\\\frontend-react-new\\\\src\\\\pages\\\\shop\\\\thema-load\\\\ThemaLoadList.tsx\",\n  _s = $RefreshSig$();\n/* C:\\Work\\07_Si\\02_SimpleDMS_Page\\frontend-react-new\\src\\pages\\shop\\thema-load\\ThemaLoadList.tsx */\n// 공공 데이터 포털 : 부산 테마거리 전체 조회\n// TODO: import\nimport React, { useEffect, useState } from \"react\";\nimport ThemaLoadService from \"../../../services/shop/ThemaLoadService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThemaLoadList() {\n  _s();\n  // TODO: 변수 정의\n  // 부서 배열 변수\n  const [themaLoad, setThemaLoad] = useState([]);\n  // 공통 변수 : page(현재페이지번호), count(총페이지건수), pageSize(3,6,9 배열)\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(1);\n  const [pageSize, setPageSize] = useState(3); // 1페이지당개수\n  // pageSizes : 배열 (셀렉트 박스 사용)\n  const pageSizes = [3, 6, 9];\n\n  // TODO: 함수 정의\n  useEffect(() => {\n    retrieveThemaLoad(); // 전체 조회\n  }, [page, pageSize]);\n\n  //   전체조회 함수\n  const retrieveThemaLoad = () => {\n    // TODO : 벡엔드 매개변수 전송 : + 현재페이지(page), 1페이지당개수(pageSize)\n    ThemaLoadService.getAll(page - 1, pageSize) // 벡엔드 전체조회요청\n    .then(response => {\n      // TODO : 공공 API 결과 값 저장\n      // TODO : totalCount(총 건수), data(결과값 배열)\n      // TODO : perPage(1페이지당 개수), data(결과값 배열)\n      // TODO : 총 페이지수 = Math.ceil(totalCount / perPage)\n      const {\n        data,\n        perPage,\n        totalCount\n      } = response.data;\n      // 총 페이지 수\n      const totalPages = Math.ceil(totalCount / perPage);\n      // data 저장\n      setThemaLoad(data);\n      setCount(totalPages);\n      // 로그 출력\n      console.log(\"response\", response.data);\n    }).catch(e => {\n      // 벡엔드 실패시 실행됨\n      console.log(e);\n    });\n  };\n\n  // TODO : handlePageSizeChange : pageSize 값 변경시 실행되는 함수\n  // select 태그 수동 바인딩 : 화면값 -> 변수에 저장\n  const handlePageSizeChange = event => {\n    setPageSize(event.target.value); // 1페이지당 개수저장(3,6,9)\n    setPage(1); // 현재페이지번호 : 1로 강제설정\n  };\n\n  // TODO : Pagination 수동 바인딩\n  //  페이지 번호를 누르면 => page 변수에 값 저장\n  const handlePageChange = (event, value) => {\n    // value == 화면의 페이지번호\n    setPage(value);\n  };\n  return (\n    /*#__PURE__*/\n    // TODO: JSX\n    _jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)\n    // <>\n    //   {/* 제목 start */}\n    //   <TitleCom title=\"ThemaLoad List\" />\n    //   {/* 제목 end */}\n\n    //   {/* paging 시작 */}\n    //   <div className=\"mt-3\">\n    //     {\"Items per Page: \"}\n    //     <select onChange={handlePageSizeChange} value={pageSize}>\n    //       {pageSizes.map((size) => (\n    //         <option key={size} value={size}>\n    //           {size}\n    //         </option>\n    //       ))}\n    //     </select>\n\n    //     <Pagination\n    //       className=\"my-3\"\n    //       count={count}\n    //       page={page}\n    //       siblingCount={1}\n    //       boundaryCount={1}\n    //       variant=\"outlined\"\n    //       shape=\"rounded\"\n    //       onChange={handlePageChange}\n    //     />\n    //   </div>\n    //   {/* paging 끝 */}\n\n    //   {/* table start */}\n    //   <div className=\"col-md-12\">\n    //     {/* table start */}\n    //     <table className=\"table\">\n    //       <thead className=\"table-light\">\n    //         <tr className=\"text-center\">\n    //           <th scope=\"col\">식당(ID)</th>\n    //           <th scope=\"col\">식당명</th>\n    //           <th scope=\"col\">지역명</th>\n    //           <th scope=\"col\">식당이미지(ID)</th>\n    //           <th scope=\"col\">식당이미지(URL)</th>\n    //           <th scope=\"col\">Actions</th>\n    //         </tr>\n    //       </thead>\n    //       <tbody>\n    //         {themaLoad &&\n    //           themaLoad.map((data, index) => (\n    //             <tr key={index} className=\"text-center\">\n    //               <td>{data[\"식당(ID)\"]}</td>\n    //               <td>{data[\"식당명\"]}</td>\n    //               <td>{data[\"지역명\"]}</td>\n    //               <td>{data[\"식당이미지(ID)\"]}</td>\n    //               <td>\n    //                 <img\n    //                   src={data[\"식당이미지(URL)\"]}\n    //                   width=\"50vw\"\n    //                   height=\"30vh\"\n    //                 />{\" \"}\n    //               </td>\n    //             </tr>\n    //           ))}\n    //       </tbody>\n    //     </table>\n    //     {/* table end */}\n    //   </div>\n    //   {/* table end */}\n    // </>\n  );\n}\n_s(ThemaLoadList, \"mdp0pskpSq34tg5enlholxzUAg4=\");\n_c = ThemaLoadList;\nexport default ThemaLoadList;\nvar _c;\n$RefreshReg$(_c, \"ThemaLoadList\");","map":{"version":3,"names":["React","useEffect","useState","ThemaLoadService","jsxDEV","_jsxDEV","ThemaLoadList","_s","themaLoad","setThemaLoad","page","setPage","count","setCount","pageSize","setPageSize","pageSizes","retrieveThemaLoad","getAll","then","response","data","perPage","totalCount","totalPages","Math","ceil","console","log","catch","e","handlePageSizeChange","event","target","value","handlePageChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Work/07_Si/02_SimpleDMS_Page/frontend-react-new/src/pages/shop/thema-load/ThemaLoadList.tsx"],"sourcesContent":["/* C:\\Work\\07_Si\\02_SimpleDMS_Page\\frontend-react-new\\src\\pages\\shop\\thema-load\\ThemaLoadList.tsx */\r\n// 공공 데이터 포털 : 부산 테마거리 전체 조회\r\n// TODO: import\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TitleCom from \"../../../components/common/TitleCom\";\r\nimport { Pagination } from \"@mui/material\";\r\nimport IThemaLoad from \"../../../types/shop/IThemaLoad\";\r\nimport ThemaLoadService from \"../../../services/shop/ThemaLoadService\";\r\n\r\nfunction ThemaLoadList() {\r\n  // TODO: 변수 정의\r\n  // 부서 배열 변수\r\n  const [themaLoad, setThemaLoad] = useState<Array<IThemaLoad>>([]);\r\n  // 공통 변수 : page(현재페이지번호), count(총페이지건수), pageSize(3,6,9 배열)\r\n  const [page, setPage] = useState<number>(1);\r\n  const [count, setCount] = useState<number>(1);\r\n  const [pageSize, setPageSize] = useState<number>(3); // 1페이지당개수\r\n  // pageSizes : 배열 (셀렉트 박스 사용)\r\n  const pageSizes = [3, 6, 9];\r\n\r\n  // TODO: 함수 정의\r\n  useEffect(() => {\r\n    retrieveThemaLoad(); // 전체 조회\r\n  }, [page, pageSize]);\r\n\r\n  //   전체조회 함수\r\n  const retrieveThemaLoad = () => {\r\n    // TODO : 벡엔드 매개변수 전송 : + 현재페이지(page), 1페이지당개수(pageSize)\r\n    ThemaLoadService.getAll(page - 1, pageSize) // 벡엔드 전체조회요청\r\n      .then((response: any) => {\r\n      // TODO : 공공 API 결과 값 저장\r\n      // TODO : totalCount(총 건수), data(결과값 배열)\r\n      // TODO : perPage(1페이지당 개수), data(결과값 배열)\r\n      // TODO : 총 페이지수 = Math.ceil(totalCount / perPage)\r\n        const { data, perPage, totalCount } = response.data;\r\n        // 총 페이지 수\r\n        const totalPages =  Math.ceil(totalCount / perPage);\r\n        // data 저장\r\n        setThemaLoad(data);\r\n        setCount(totalPages);\r\n        // 로그 출력\r\n        console.log(\"response\", response.data);\r\n      })\r\n      .catch((e: Error) => {\r\n        // 벡엔드 실패시 실행됨\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  // TODO : handlePageSizeChange : pageSize 값 변경시 실행되는 함수\r\n  // select 태그 수동 바인딩 : 화면값 -> 변수에 저장\r\n  const handlePageSizeChange = (event: any) => {\r\n    setPageSize(event.target.value); // 1페이지당 개수저장(3,6,9)\r\n    setPage(1); // 현재페이지번호 : 1로 강제설정\r\n  };\r\n\r\n  // TODO : Pagination 수동 바인딩\r\n  //  페이지 번호를 누르면 => page 변수에 값 저장\r\n  const handlePageChange = (event: any, value: number) => {\r\n    // value == 화면의 페이지번호\r\n    setPage(value);\r\n  };\r\n  return (\r\n    // TODO: JSX\r\n    <div />\r\n    // <>\r\n    //   {/* 제목 start */}\r\n    //   <TitleCom title=\"ThemaLoad List\" />\r\n    //   {/* 제목 end */}\r\n\r\n    //   {/* paging 시작 */}\r\n    //   <div className=\"mt-3\">\r\n    //     {\"Items per Page: \"}\r\n    //     <select onChange={handlePageSizeChange} value={pageSize}>\r\n    //       {pageSizes.map((size) => (\r\n    //         <option key={size} value={size}>\r\n    //           {size}\r\n    //         </option>\r\n    //       ))}\r\n    //     </select>\r\n\r\n    //     <Pagination\r\n    //       className=\"my-3\"\r\n    //       count={count}\r\n    //       page={page}\r\n    //       siblingCount={1}\r\n    //       boundaryCount={1}\r\n    //       variant=\"outlined\"\r\n    //       shape=\"rounded\"\r\n    //       onChange={handlePageChange}\r\n    //     />\r\n    //   </div>\r\n    //   {/* paging 끝 */}\r\n\r\n    //   {/* table start */}\r\n    //   <div className=\"col-md-12\">\r\n    //     {/* table start */}\r\n    //     <table className=\"table\">\r\n    //       <thead className=\"table-light\">\r\n    //         <tr className=\"text-center\">\r\n    //           <th scope=\"col\">식당(ID)</th>\r\n    //           <th scope=\"col\">식당명</th>\r\n    //           <th scope=\"col\">지역명</th>\r\n    //           <th scope=\"col\">식당이미지(ID)</th>\r\n    //           <th scope=\"col\">식당이미지(URL)</th>\r\n    //           <th scope=\"col\">Actions</th>\r\n    //         </tr>\r\n    //       </thead>\r\n    //       <tbody>\r\n    //         {themaLoad &&\r\n    //           themaLoad.map((data, index) => (\r\n    //             <tr key={index} className=\"text-center\">\r\n    //               <td>{data[\"식당(ID)\"]}</td>\r\n    //               <td>{data[\"식당명\"]}</td>\r\n    //               <td>{data[\"지역명\"]}</td>\r\n    //               <td>{data[\"식당이미지(ID)\"]}</td>\r\n    //               <td>\r\n    //                 <img\r\n    //                   src={data[\"식당이미지(URL)\"]}\r\n    //                   width=\"50vw\"\r\n    //                   height=\"30vh\"\r\n    //                 />{\" \"}\r\n    //               </td>\r\n    //             </tr>\r\n    //           ))}\r\n    //       </tbody>\r\n    //     </table>\r\n    //     {/* table end */}\r\n    //   </div>\r\n    //   {/* table end */}\r\n    // </>\r\n  );\r\n}\r\n\r\nexport default ThemaLoadList;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAIlD,OAAOC,gBAAgB,MAAM,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB;EACA;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAoB,EAAE,CAAC;EACjE;EACA,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAS,CAAC,CAAC;EAC3C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAS,CAAC,CAAC;EAC7C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAS,CAAC,CAAC,CAAC,CAAC;EACrD;EACA,MAAMc,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;EAE3B;EACAf,SAAS,CAAC,MAAM;IACdgB,iBAAiB,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC,EAAE,CAACP,IAAI,EAAEI,QAAQ,CAAC,CAAC;;EAEpB;EACA,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACAd,gBAAgB,CAACe,MAAM,CAACR,IAAI,GAAG,CAAC,EAAEI,QAAQ,CAAC,CAAC;IAAA,CACzCK,IAAI,CAAEC,QAAa,IAAK;MACzB;MACA;MACA;MACA;MACE,MAAM;QAAEC,IAAI;QAAEC,OAAO;QAAEC;MAAW,CAAC,GAAGH,QAAQ,CAACC,IAAI;MACnD;MACA,MAAMG,UAAU,GAAIC,IAAI,CAACC,IAAI,CAACH,UAAU,GAAGD,OAAO,CAAC;MACnD;MACAb,YAAY,CAACY,IAAI,CAAC;MAClBR,QAAQ,CAACW,UAAU,CAAC;MACpB;MACAG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAER,QAAQ,CAACC,IAAI,CAAC;IACxC,CAAC,CAAC,CACDQ,KAAK,CAAEC,CAAQ,IAAK;MACnB;MACAH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;IAChB,CAAC,CAAC;EACN,CAAC;;EAED;EACA;EACA,MAAMC,oBAAoB,GAAIC,KAAU,IAAK;IAC3CjB,WAAW,CAACiB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACjCvB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC;;EAED;EACA;EACA,MAAMwB,gBAAgB,GAAGA,CAACH,KAAU,EAAEE,KAAa,KAAK;IACtD;IACAvB,OAAO,CAACuB,KAAK,CAAC;EAChB,CAAC;EACD;IAAA;IACE;IACA7B,OAAA;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;IACN;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;AAEJ;AAAChC,EAAA,CA3HQD,aAAa;AAAAkC,EAAA,GAAblC,aAAa;AA6HtB,eAAeA,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}